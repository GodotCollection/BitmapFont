CC  = 	g++
CFLAGS = -O2 -g -Wall -c
SOURCES = BitmapFont.cpp 
OBJECTS = $(SOURCES:.cpp=.o)
TARGET = BitmapFont 
FONTS = ASC12 ASC16 ASC48 HZK12 HZK14 HZK16 HZK16F HZK16S HZK24F HZK24H HZK24K HZK24S HZK32 HZK40S HZK40T HZK48 HZK48S HZK48T

:$(TARGET)

$(TARGET): $(OBJECTS)
	$(CC) $(OBJECTS) -o $@
	mkdir -p output/

%.o: %.cpp
	$(CC) $(CFLAGS) $< -o $@

SOURCES_HACK = HackFont.cpp Block.cpp
OBJECTS_HACK = $(SOURCES_HACK:.cpp=.o)
TARGET_HACK = HackFont

$(TARGET_HACK): $(OBJECTS_HACK)
	$(CC) $(OBJECTS_HACK) -o $@

#HackFont: HackFont.o BitmapFont
#	$(CC) HackFont.o -o $@
#	./$@ font/HZK16 font/HZK16_0
#	mkdir -p output/
#	./BitmapFont font/HZK16_0 32 2 2 0xA1 > output/HZK16_0.txt

allfonts:$(FONTS)

all: $(TARGET_HACK) $(TARGET)

hackfont:$(TARGET_HACK) $(TARGET)
	mkdir -p font_hack/
	./$< font/HZK16 font_hack/HZK16_0 19 17 1 1
	mkdir -p output/	
	./BitmapFont font_hack/HZK16_0 32 2 2 0xA1 > output/HZK16_0.txt

clean:
	rm -rfv $(OBJECTS) $(TARGET)
	rm -rfv $(OBJECTS_HACK) $(TARGET_HACK)	
	rm -rfv output/
	rm -rfv font_hack/
	
ASC12: FONT_NAME = ASC12
ASC12: FONT_LENGTH = 12
ASC12: BYTE_IN_ROW = 1
ASC12: BYTE_IN_CODE = 1
ASC12: FONT_OFFSET = 0x20
ASC12: ASC12.txt

ASC16: FONT_NAME = ASC16
ASC16: FONT_LENGTH = 16
ASC16: BYTE_IN_ROW = 1
ASC16: BYTE_IN_CODE = 1
ASC16: FONT_OFFSET = 0x00
ASC16: ASC16.txt

ASC48: FONT_NAME = ASC48
ASC48: FONT_LENGTH = 144
ASC48: BYTE_IN_ROW = 3
ASC48: BYTE_IN_CODE = 1
ASC48: FONT_OFFSET = 0x20
ASC48: ASC48.txt

HZK12: FONT_NAME = HZK12
HZK12: FONT_LENGTH = 24
HZK12: BYTE_IN_ROW = 2
HZK12: BYTE_IN_CODE = 2
HZK12: FONT_OFFSET = 0xA1
HZK12: HZK12.txt
	
HZK14: FONT_NAME = HZK14
HZK14: FONT_LENGTH = 28
HZK14: BYTE_IN_ROW = 2
HZK14: BYTE_IN_CODE = 2
HZK14: FONT_OFFSET = 0xA1
HZK14: HZK14.txt

HZK16: FONT_NAME = HZK16
HZK16: FONT_LENGTH = 32
HZK16: BYTE_IN_ROW = 2
HZK16: BYTE_IN_CODE = 2
HZK16: FONT_OFFSET = 0xA1
HZK16: HZK16.txt

HZK16F: FONT_NAME = HZK16F
HZK16F: FONT_LENGTH = 32
HZK16F: BYTE_IN_ROW = 2
HZK16F: BYTE_IN_CODE = 2
HZK16F: FONT_OFFSET = 0xA1
HZK16F: HZK16F.txt

HZK16S: FONT_NAME = HZK16S
HZK16S: FONT_LENGTH = 32
HZK16S: BYTE_IN_ROW = 2
HZK16S: BYTE_IN_CODE = 2
HZK16S: FONT_OFFSET = 0xA1
HZK16S: HZK16S.txt

HZK24F: FONT_NAME = HZK24F
HZK24F: FONT_LENGTH = 72
HZK24F: BYTE_IN_ROW = 3
HZK24F: BYTE_IN_CODE = 2
HZK24F: FONT_OFFSET = 0xA1
HZK24F: HZK24F.txt

HZK24H: FONT_NAME = HZK24H
HZK24H: FONT_LENGTH = 72
HZK24H: BYTE_IN_ROW = 3
HZK24H: BYTE_IN_CODE = 2
HZK24H: FONT_OFFSET = 0xA1
HZK24H: HZK24H.txt

HZK24K: FONT_NAME = HZK24K
HZK24K: FONT_LENGTH = 72
HZK24K: BYTE_IN_ROW = 3
HZK24K: BYTE_IN_CODE = 2
HZK24K: FONT_OFFSET = 0xA1
HZK24K: HZK24K.txt

HZK24S: FONT_NAME = HZK24S
HZK24S: FONT_LENGTH = 72
HZK24S: BYTE_IN_ROW = 3
HZK24S: BYTE_IN_CODE = 2
HZK24S: FONT_OFFSET = 0xA1
HZK24S: HZK24S.txt

HZK32: FONT_NAME = HZK32
HZK32: FONT_LENGTH = 128
HZK32: BYTE_IN_ROW = 4
HZK32: BYTE_IN_CODE = 2
HZK32: FONT_OFFSET = 0xA1
HZK32: HZK32.txt

HZK40S: FONT_NAME = HZK40S
HZK40S: FONT_LENGTH = 200
HZK40S: BYTE_IN_ROW = 5
HZK40S: BYTE_IN_CODE = 2
HZK40S: FONT_OFFSET = 0xB0
HZK40S: HZK40S.txt

HZK40T: FONT_NAME = HZK40T
HZK40T: FONT_LENGTH = 200
HZK40T: BYTE_IN_ROW = 5
HZK40T: BYTE_IN_CODE = 2
HZK40T: FONT_OFFSET = 0xA1
HZK40T: HZK40T.txt

HZK48S: FONT_NAME = HZK48S
HZK48S: FONT_LENGTH = 288
HZK48S: BYTE_IN_ROW = 6
HZK48S: BYTE_IN_CODE = 2
HZK48S: FONT_OFFSET = 0xB0
HZK48S: HZK48S.txt

HZK48T: FONT_NAME = HZK48T
HZK48T: FONT_LENGTH = 288
HZK48T: BYTE_IN_ROW = 6
HZK48T: BYTE_IN_CODE = 2
HZK48T: FONT_OFFSET = 0xA1
HZK48T: HZK48T.txt

HZK48: FONT_NAME = HZK48
HZK48: FONT_LENGTH = 288
HZK48: BYTE_IN_ROW = 6
HZK48: BYTE_IN_CODE = 2
HZK48: FONT_OFFSET = 0xA1
HZK48: HZK48.txt

%.txt: $(TARGET)
	./$(TARGET) font/$(FONT_NAME) $(FONT_LENGTH) $(BYTE_IN_ROW) $(BYTE_IN_CODE) $(FONT_OFFSET) > output/$@

